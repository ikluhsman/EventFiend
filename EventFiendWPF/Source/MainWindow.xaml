<Window xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:local="clr-namespace:EventFiend"
        xmlns:c1="http://schemas.componentone.com/winfx/2006/xaml" x:Class="EventFiend.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="768" SizeToContent="Width" MinWidth="1024">
    <Window.Resources>

        <!--Defines ObservableCollection and CollectionViewSource for Event Logs-->
        <local:EventLogs x:Key="eventLogs"/>
        <CollectionViewSource x:Key="cvsEventLogs" Source="{StaticResource eventLogs}"/>

        <!--Defines ObservableCollection and CollectionViewSource for Event Sources-->
        <local:EventSources x:Key="eventSources"/>
        <CollectionViewSource x:Key="cvsEventSources" Source="{StaticResource eventSources}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="SourceParent"/>
            </CollectionViewSource.GroupDescriptions>
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="SourceParent"/>
                <scm:SortDescription PropertyName="Name"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <!--Define ObservableCollection and CollectionViewSource for Event Log Entries-->
        <local:EventLogEntries x:Key="eventLogEntries"/>
        <CollectionViewSource x:Key="cvsEventLogEntries" Source="{StaticResource eventLogEntries}" Filter="CollectionViewSource_Filter"/>

        <!--Define Style for the Event Sources List Box Group Headers-->
        <Style x:Key="ListGroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Expander IsExpanded="True" Background="#FF112255" BorderBrush="#FF002255" Foreground="#FFEEEEEE" BorderThickness="1,1,1,5">
                            <Expander.Header>
                                <DockPanel>
                                    <TextBlock FontWeight="Bold" Text="{Binding Name}" Margin="5,0,0,0" Width="100" Foreground="#FFEEEEEE"/>
                                </DockPanel>
                            </Expander.Header>
                            <ItemsPresenter/>
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Define Style for the Event Sources ListBox - Style the ListBoxItemContainer and ListBoxItems-->
        <Style x:Key="ListBoxItemContainerStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Border" BorderThickness="0" Background="AliceBlue">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="AntiqueWhite"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Define Style for the Event Log Entries data grid grouping-->
        <Style x:Key="GridGroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Expander IsExpanded="False" Background="#FF112255" BorderBrush="#FF112255" Foreground="#FFEEEEEE" BorderThickness="1,1,1,5">
                            <Expander.Header>
                                <DockPanel>
                                    <TextBlock FontWeight="Bold" Text="Source:" Margin="5,0,0,0" Width="50" Foreground="#FFEEEEEE"/>
                                    <TextBlock FontWeight="Bold" Text="{Binding Name}" Margin="5,0,0,0" Width="200" Foreground="#FFEEEEEE"/>
                                    <TextBlock FontWeight="Bold" Text="Count:" Margin="5,0,0,0" Width="50" Foreground="#FFEEEEEE"/>
                                    <TextBlock FontWeight="Bold" Text="{Binding ItemCount}" Margin="5,0,0,0" Width="100" Foreground="#FFEEEEEE"/>
                                </DockPanel>
                            </Expander.Header>
                            <ItemsPresenter/>
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Define Event Log Entries DataGrid cell style-->
        <Style x:Key="EventLogEntryDataGridCellStyle" TargetType="{x:Type DataGridCell}" >
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="LightBlue"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Define Event Log Entries DataGrid row style-->
        <Style x:Key="EventLogEntryDataGridRowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="AliceBlue"/>
                    <Setter Property="BorderBrush" Value="CornflowerBlue"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="LightBlue"/>
                    <Setter Property="BorderBrush" Value="CornflowerBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="377*" />
            <ColumnDefinition Width="647*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="22"/>
            <RowDefinition Height="230"/>
            <RowDefinition/>
            <RowDefinition Height="44"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" Grid.ColumnSpan="2">
            <MenuItem Header="_File">
                <MenuItem Header="_Save Events"/>
            </MenuItem>
            <MenuItem Header="_Connect">
                <MenuItem Header="_Remote System.."/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About"/>
                <MenuItem Header="_Help"/>
            </MenuItem>
        </Menu>

        <StackPanel Grid.Row="1" Orientation="Vertical" Grid.ColumnSpan="2">
            <StackPanel Orientation="Horizontal" Margin="5">
                <Button x:Name="btnRefreshEventLogs" Click="btnRefreshEventLogs_Click" Height="22" Width="90" Content="Refresh"/>
                <Button x:Name="btnConnectTo" Click="btnConnectTo_Click" Height="22" Width="90" Content="Connect To.." Margin="5,0,0,0"/>
                <Button x:Name="btnApplyFilters" Click="btnApplyFilters_Click" Height="22" Width="90" Content="Apply Filters" Margin="5,0,0,0"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" Margin="5">
                <Label Margin="0,0,5,0" Content="EventIDs"/>
                <TextBox x:Name="textBoxEventIds" Width="301" KeyDown="textBoxEventIds_KeyDown" TextChanged="textBoxEventIds_TextChanged"/>
                <TextBlock Height="20" VerticalAlignment="Bottom" Margin="10,0,0,0"><Run Text="Comma seperated numbers only, characters will be removed."/></TextBlock>
            </StackPanel>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" Margin="5">
                <Label Content="Messages"/>
                <TextBox x:Name="textBoxMessages" Width="300"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="From"/>
                <xctk:DateTimePicker Name="DateTimePickerFrom" HorizontalAlignment="Left" Width="250" Format="SortableDateTime"/>
                <Label Content="To"/>
                <xctk:DateTimePicker Name="DateTimePickerTo" HorizontalAlignment="Left" Width="250" Format="SortableDateTime"/>
            </StackPanel>
            <GroupBox Width="130" Height="80" VerticalAlignment="Top" HorizontalAlignment="Left" Header="Group By" BorderBrush="Gray" BorderThickness="1" Padding="5">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
                    <RadioButton x:Name="radioButtonGroupByNone" Checked="radioButtonGroupByNone_Checked" IsChecked="true" Content="None"/>
                    <RadioButton x:Name="radioButtonGroupByEventId" Checked="radioButtonGroupByEventId_Checked" Content="Event ID"/>
                    <RadioButton x:Name="radioButtonGroupBySource" Checked="radioButtonGroupBySource_Checked" Content="Event Source"/>
                </StackPanel>
            </GroupBox>
            
        </StackPanel>

        <GroupBox Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Top" Height="130" Width="140" Header="Level" BorderBrush="Gray" BorderThickness="1" Padding="1" Margin="0,10,10,0">
            <ListBox x:Name="eventLevelListBox" BorderThickness="0" SelectionMode="Multiple">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <CheckBox x:Name="levelCheckBox" Content="{Binding}" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Checked="levelCheckBox_Checked" Unchecked="levelCheckBox_Unchecked"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </GroupBox>

        <Grid Grid.Row="2" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ListBox x:Name="eventLogListbox" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SelectionMode="Multiple" ItemsSource="{Binding Source={StaticResource cvsEventLogs}}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <CheckBox x:Name="checkBoxEventLog" Content="{Binding Log}" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Checked="checkBoxEventLog_Checked" Unchecked="checkBoxEventLog_Unchecked"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Grid.RowSpan="2"/>
            <ListBox Grid.Row="1" x:Name="eventSourceListBox" ItemContainerStyle="{StaticResource ListBoxItemContainerStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding Source={StaticResource cvsEventSources}}" SelectionMode="Multiple" IsSynchronizedWithCurrentItem="True">
                <ListBox.GroupStyle>
                    <GroupStyle ContainerStyle="{StaticResource ListGroupHeaderStyle}">
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                    </GroupStyle>
                </ListBox.GroupStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <CheckBox x:Name="checkBoxEventSource" Content="{Binding Name}" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Checked="checkBoxEventSource_Checked" Unchecked="checkBoxEventSource_Unchecked"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <DataGrid x:Name="eventLogEntriesDataGrid" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.RowSpan="2" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding Source={StaticResource cvsEventLogEntries}}" AutoGenerateColumns="False" GridLinesVisibility="None" CellStyle="{StaticResource EventLogEntryDataGridCellStyle}" RowStyle="{StaticResource EventLogEntryDataGridRowStyle}" IsReadOnly="True">
                <DataGrid.GroupStyle>
                    <GroupStyle ContainerStyle="{StaticResource GridGroupHeaderStyle}">
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <DataGridRowsPresenter/>
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                    </GroupStyle>
                </DataGrid.GroupStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Level" Binding="{Binding LogItem.EntryType}" MinWidth="50"/>
                    <DataGridTextColumn Header="Date and Time" Binding="{Binding LogItem.TimeWritten}" MinWidth="150"/>
                    <DataGridTextColumn Header="Source" Binding="{Binding LogItem.Source}" Width="250"/>
                    <DataGridTextColumn Header="Event ID" Binding="{Binding LogItem.EventID}" MinWidth="50"/>
                    <DataGridTextColumn Header="Task Category" Binding="{Binding LogItem.Category}" Width="100"/>
                </DataGrid.Columns>
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <Border BorderThickness="0" Background="BlanchedAlmond" Padding="10">
                            <StackPanel Orientation="Vertical">
                                <DockPanel DockPanel.Dock="Top">
                                    <TextBlock Text="Message: " VerticalAlignment="Top" />
                                    <TextBlock Foreground="MidnightBlue" Text="{Binding LogItem.Message}" VerticalAlignment="Top" TextWrapping="WrapWithOverflow" Width="Auto"/>
                                </DockPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="12" Text="Log Name: " VerticalAlignment="Center" />
                                    <TextBlock FontSize="12" Foreground="MidnightBlue" Text="{Binding Log}" VerticalAlignment="Center" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="12" Text="Source: " VerticalAlignment="Center" />
                                    <TextBlock FontSize="12" Foreground="MidnightBlue" Text="{Binding LogItem.Source}" VerticalAlignment="Center" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="12" Text="Event ID: " VerticalAlignment="Center" />
                                    <TextBlock FontSize="12" Foreground="MidnightBlue" Text="{Binding LogItem.EventID}" VerticalAlignment="Center" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="12" Text="Level: " VerticalAlignment="Center" />
                                    <TextBlock FontSize="12" Foreground="MidnightBlue" Text="{Binding LogItem.EntryType}" VerticalAlignment="Center" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="12" Text="User: " VerticalAlignment="Center" />
                                    <TextBlock FontSize="12" Foreground="MidnightBlue" Text="{Binding LogItem.UserName}" VerticalAlignment="Center" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="12" Text="Logged: " VerticalAlignment="Center" />
                                    <TextBlock FontSize="12" Foreground="MidnightBlue" Text="{Binding LogItem.TimeWritten}" VerticalAlignment="Center" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="12" Text="Task Category: " VerticalAlignment="Center" />
                                    <TextBlock FontSize="12" Foreground="MidnightBlue" Text="{Binding LogItem.Category}" VerticalAlignment="Center" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="12" Text="Op Code: " VerticalAlignment="Center" />
                                    <TextBlock FontSize="12" Foreground="MidnightBlue" Text="{Binding LogItem.CategoryNumber}" VerticalAlignment="Center" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="12" Text="Keywords: " VerticalAlignment="Center" />
                                    <TextBlock FontSize="12" Foreground="MidnightBlue" Text="{Binding LogItem.ReplacementStrings}" VerticalAlignment="Center" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="12" Text="Computer: " VerticalAlignment="Center" />
                                    <TextBlock FontSize="12" Foreground="MidnightBlue" Text="{Binding LogItem.MachineName}" VerticalAlignment="Center" />
                                </StackPanel>
                            </StackPanel>
                        </Border>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>
            </DataGrid>
        </Grid>

        <StatusBar Grid.Row="2" Grid.ColumnSpan="2" Margin="0,456,0,0" Grid.RowSpan="2">
            <StatusBarItem>
                <ProgressBar x:Name="visibleProgressBar" Height="22" Width="100" Margin="10,0,0,0" />
            </StatusBarItem>
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0,0,5,0"><Run Text="System:"/></TextBlock>
                    <TextBlock x:Name="statusBarSystemText"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
